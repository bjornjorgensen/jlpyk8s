apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "11"
    field.cattle.io/publicEndpoints: '[{"addresses":["192.168.1.123","192.168.1.124","192.168.1.125","192.168.1.126","192.168.1.127","192.168.1.129"],"port":80,"protocol":"HTTP","serviceName":"default:my-pyspark-notebook-spark-ui","ingressName":"default:sparkui","hostname":"sparkui.bjhjemme.duckdns.org","path":"/","allNodes":false},{"addresses":["192.168.1.123","192.168.1.124","192.168.1.125","192.168.1.126","192.168.1.127","192.168.1.129"],"port":80,"protocol":"HTTP","serviceName":"default:my-pyspark-notebook-jupyter","ingressName":"default:my-pyspark-notebook","hostname":"jlab.bjhjemme.duckdns.org","path":"/","allNodes":false}]'
    meta.helm.sh/release-name: my-pyspark-notebook
    meta.helm.sh/release-namespace: default
  creationTimestamp: "2021-08-25T08:46:35Z"
  generation: 44
  labels:
    app.kubernetes.io/component: jupyter
    app.kubernetes.io/instance: my-pyspark-notebook
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pyspark-notebook
    app.kubernetes.io/version: spark-3.1.2-hadoop-3.2
    helm.sh/chart: pyspark-notebook-0.1.1
    sparkRole: driver
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/version: {}
          f:helm.sh/chart: {}
          f:sparkRole: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app.kubernetes.io/component: {}
              f:app.kubernetes.io/instance: {}
              f:sparkRole: {}
          f:spec:
            f:containers:
              k:{"name":"jupyter"}:
                .: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/jupyter"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/root/.jupyter"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"my-pyspark-notebook-config-volume"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"my-pyspark-notebook-notebooks"}:
                .: {}
                f:name: {}
                f:persistentVolumeClaim:
                  .: {}
                  f:claimName: {}
    manager: helm
    operation: Update
    time: "2021-08-25T08:46:35Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:field.cattle.io/publicEndpoints: {}
      f:spec:
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:cattle.io/timestamp: {}
          f:spec:
            f:affinity: {}
            f:containers:
              k:{"name":"jupyter"}:
                f:image: {}
                f:volumeMounts:
                  k:{"mountPath":"/home/jovyan"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/opt/spark/work-dir"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:volumes:
              k:{"name":"vol2"}:
                .: {}
                f:name: {}
                f:persistentVolumeClaim:
                  .: {}
                  f:claimName: {}
              k:{"name":"vol3"}:
                .: {}
                f:name: {}
                f:persistentVolumeClaim:
                  .: {}
                  f:claimName: {}
    manager: rancher
    operation: Update
    time: "2021-08-25T11:35:38Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-08-29T18:17:16Z"
  name: my-pyspark-notebook
  namespace: default
  resourceVersion: "4374628"
  uid: 3c477bef-9542-47cc-ba00-4684f22511df
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: jupyter
      app.kubernetes.io/instance: my-pyspark-notebook
      sparkRole: driver
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2021-08-29T17:30:22Z"
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: jupyter
        app.kubernetes.io/instance: my-pyspark-notebook
        sparkRole: driver
    spec:
      affinity: {}
      containers:
      - image: bjornjorgensen/spark-notebook:spark-3.2-290821
        imagePullPolicy: IfNotPresent
        name: jupyter
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /root/.jupyter
          name: my-pyspark-notebook-config-volume
        - mountPath: /jupyter
          name: my-pyspark-notebook-notebooks
        - mountPath: /home/jovyan
          name: vol2
        - mountPath: /opt/spark/work-dir
          name: vol3
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: my-pyspark-notebook
      serviceAccountName: my-pyspark-notebook
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: my-pyspark-notebook
        name: my-pyspark-notebook-config-volume
      - name: my-pyspark-notebook-notebooks
        persistentVolumeClaim:
          claimName: my-pyspark-notebook-jupyter-notebook-volume
      - name: vol2
        persistentVolumeClaim:
          claimName: jovyan
      - name: vol3
        persistentVolumeClaim:
          claimName: nfs100
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2021-08-29T17:42:28Z"
    lastUpdateTime: "2021-08-29T17:42:28Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2021-08-25T08:46:35Z"
    lastUpdateTime: "2021-08-29T18:17:16Z"
    message: ReplicaSet "my-pyspark-notebook-f4665685c" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 44
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
